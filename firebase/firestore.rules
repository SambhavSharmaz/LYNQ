rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function isSignedIn() {
      return request.auth != null;
    }

    // Users collection: everyone signed-in can read, only the owner can write
    match /users/{uid} {
      allow read: if isSignedIn();
      allow create, update: if isSignedIn() && request.auth.uid == uid;
      allow delete: if false;
    }

    // Chats collection and nested messages
    match /chats/{chatId} {
      // Read chat only if member
      allow read: if isSignedIn() && (request.auth.uid in resource.data.members);

      // Create a new chat only if creator is in members
      allow create: if isSignedIn()
        && request.resource.data.members is list
        && request.auth.uid in request.resource.data.members;

      // Update allowed only for members
      allow update: if isSignedIn() && (request.auth.uid in resource.data.members);

      // Prevent deletes by default (adjust if you want admins/moderators)
      allow delete: if false;

      // Messages subcollection
      match /messages/{messageId} {
        // Read messages if member of parent chat
        allow read: if isSignedIn()
          && (request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.members);

        // Create message if member and senderId matches auth uid
        allow create: if isSignedIn()
          && (request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.members)
          && request.resource.data.senderId == request.auth.uid;

        // No editing/deleting messages
        allow update, delete: if false;
      }
    }
  }
}
